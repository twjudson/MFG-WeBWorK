##DESCRIPTION
##  Algebra problem: identify transformation of reciprocal function from formula
##ENDDESCRIPTION

##KEYWORDS('algebra', 'function', 'graph', 'translation', 'scale','reflection')

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Domain and range)
## Date('9/8/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('2.3')
## Problem1('31')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "niceTables.pl",
   "PGgraphmacros.pl",
   "PGchoicemacros.pl",
   "AnswerFormatHelp.pl",
  "parserPopUp.pl",
"parserRoot.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
Context()->flags->set( reduceConstants => 0, reduceConstantFunctions => 0,  );
$sgn = random(-1,1,2);
$den = random(2,3);
$a = $sgn * $den;
$afactor = Compute("1/$den");
$n = random(1,2);
$f0 = Formula("1/x**($n)")->reduce; 
$fd = Formula("  1/ ($a* (x**$n) )  ")->reduce;
$f = Formula("   1/$a* $f0  ")->reduce;

$k = Compute("1/$a");;

$grow = "compressed vertically";

$Pop = PopUp(["select", "compressed vertically", "stretched vertically"], "$grow");

$flip = "is not";
if ($a < 0) {$flip = "is";
}
$fPop = PopUp(["select", "is", "is not"], "$flip");


$xmin = -8;
$xmax = 8;
$xgrid = ($xmax - $xmin);
$ymin = -4;
$ymax = 4;
$ygrid = 2*($ymax-$ymin);
$xpix = 500;
$ypix = 500;

$xp = round(.5*$xpix);
$yp = round(.5*$ypix);


$gr = init_graph($xmin,$ymin,$xmax,$ymax,axes=>[0,0],grid=>[$xgrid,$ygrid],size=>[$xpix,$ypix]);
$gr -> lb('reset'); #remove default label and tick marks
$gr -> lb(new Label ( .97*$xmax,0.05*$ymax, "x",'blue','center','middle'));
$gr -> lb(new Label (.05*$xmax, 0.97*$ymax, "y" ,'blue','center','middle'));
foreach my $i (1..3) {
$xscale =3*$i;
$yscale =3*$i;
$gr -> lb(new Label (.98*$xscale,-.15, $xscale,'black','center','middle'));
$gr -> lb(new Label (-.98*$xscale,-.15, -$xscale,'black','center','middle'));
$gr -> lb(new Label (-.2,$yscale,$yscale,'black','center','middle'));
$gr -> lb(new Label (-.2,-$yscale,-$yscale,'black','center','middle'));
};
$plus = .01;
$minus = -.01;
add_functions( $gr,
"$f for x in [.01, $xmax] using color:red and weight:2",
"$f for x in [$xmin, -.01] using color:red and weight:2",
"$f0 for x in [.01, $xmax] using color:gray and weight:2",
"$f0 for x in [$xmin, -.01] using color:gray and weight:2"
);
($gr->fn)[0]->steps(200);

$x0 = 2;
$y0 = $f->eval(x=>$x0);
$y0b = $y0*3.1;
$x0b = $x0+0.2;
$gr->stamps( closed_circle($x0,$y0,'blue') );
$gr -> lb(new Label ($x0b,$y0b, "($x0,$y0)",'blue','left','middle'));

$x1 = 1;
$y1 = $f->eval(x=>$x1);
$x1b = $x1-0.2;
$gr->stamps( closed_circle($x1,$y1,'green') );
$gr -> lb(new Label ($x1b,$y1, "($x1,$y1)",'green','right','middle'));

$x2 =-1;
$y2 = $f->eval(x=>$x2);
$y2b = $y2*2.1;
$x2b = $x2-0.4;
$gr->stamps( closed_circle($x2,$y2,'black') );
$gr -> lb(new Label ($x2b,$y2b, "($x2,$y2)",'black','right','middle'));







##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_PGML



>>[``f(x) = [$fd]``]<<

a. 
Identify the scale factor for each function and describe how it affects the graph of the corresponding basic function.

    The scale factor is [___]{$k}; the basic function [`y=[$f0]`]  [@ $fPop->menu() @]* reflected across the [`x`] axis and is [@ $Pop->menu() @]* by a factor [__].

b. 
Using guidepoints, sketch the basic graph and the graph of the given function on the same axes. Label the coordinates of three points on the graph of the given function.

END_PGML
Context()->normalStrings;
$showPartialCorrectAnswers = 1;
#ANS(Compute("k")->cmp());
ANS($fPop->cmp());
ANS($Pop->cmp());
ANS($afactor->cmp());

##############################################################
#



BEGIN_PGML_SOLUTION

a. 
The scale factor is [`[$k]`]. Because this [$flip] less than 0, the graph  [$flip] flipped across the [`x`]-axis. 

[@ image(insertGraph($gr), width=>$xp, height=>$yp, tex_size=>700) @]*




END_PGML_SOLUTION

ENDDOCUMENT();  