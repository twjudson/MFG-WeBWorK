##DESCRIPTION
##  Algebra problem: identify transformation of basic function from formula
##ENDDESCRIPTION

##KEYWORDS('algebra', 'function', 'graph', 'translation', 'scale','reflection')

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Domain and range)
## Date('9/10/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('2.3')
## Problem1('51')

########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "niceTables.pl",
   "PGgraphmacros.pl",
   "PGchoicemacros.pl",
   "AnswerFormatHelp.pl",
  "parserPopUp.pl",
"parserRoot.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
Context()->flags->set( reduceConstants => 0, reduceConstantFunctions => 0,  );
Context()->variables->add(t=>"Real");
parser::Root->Enable;
@scales=("-3","-2", "-2/3","-1/2", "-1/3","1/3", "1/2", "2/3", "2","3");
$j = random(0,9);
$factor = $scales[$j];
$afactor = $scales[$j];

@basics=("x**3", "abs(x)", "x**2", "sgn(x)*root(3,abs(x))");
$i  = random(0,3);
$f0 = Formula("$basics[$i]");
do {$h = non_zero_random(-5,5);
$k = non_zero_random(-5,5);}
until (abs($h) != abs($k));
$vertical = abs($k);
$horizontal = abs($h);

@vdirect = ("down", "up");
$vi = ( $k > 0 );
$vdirection = $vdirect[$vi];

@hdirect = ("left", "right");
$hi = ( $h > 0 );
$hdirection = $hdirect[$hi];

$f1 =$factor*$f0->substitute(x=> "x-$h" ) ->reduce;
$f = Formula("$f1 + $k");
$fdisplay = $f->substitute(x=>"t");;
if ($i == 3) {$fdisplay = " $factor \sqrt[3]{t-$h}+$k";};

$vshift = "is a vertical translation of $vertical $vdirection";
$vPop = PopUp(["select", 
"is no vertical translation",
"is a vertical translation of $vertical up", 
"is a vertical translation of $vertical down", 
"is a vertical translation of $horizontal up", 
"is a vertical translation of $horizontal down", 
], 
"$vshift");


$hshift = "is a horizontal translation of $horizontal $hdirection";
$hPop = PopUp(["select", 
"is no horizontal translation",
"is a horizonta translation of $vertical left", 
"is a horizontal translation of $vertical right", 
"is a horizontal translation of $horizontal left", 
"is a horizontal translation of $horizontal right", 
], 
"$hshift");


$flip = "is not";
if ($factor < 0) {$flip = "is";
$afactor = $scales[9-$j];
}
$fPop = PopUp(["select", "is", "is not"], "$flip");

$stretch = "stretch";
if (Compute("$afactor")<1) {$stretch = "compression";};


$vstretch= "is a vertical $stretch by factor $afactor";
$sPop = PopUp(["select", 
"is no vertical stretch or compression",
"is a vertical stretch by factor $afactor", 
"is a vertical compression by factor $afactor", 
], 
"$vstretch");


$xmin = -8+$h;
$xmax = 8+$h;
$xgrid = ($xmax - $xmin);
$ymin = -8+$k;
$ymax = 8+$k;
$ygrid = $ymax-$ymin;
$xpix = 500;
$ypix = 500;

$xp = round(.5*$xpix);
$yp = round(.5*$ypix);


$gr = init_graph($xmin,$ymin,$xmax,$ymax,axes=>[0,0],grid=>[$xgrid,$ygrid],size=>[$xpix,$ypix]);
$gr -> lb('reset'); #remove default label and tick marks
$gr -> lb(new Label ( .97*$xmax,0.05*$ymax, "t",'blue','center','middle'));
$gr -> lb(new Label (.05*$xmax, 0.97*$ymax, "y" ,'blue','center','middle'));
foreach my $i (1..3) {
$xscale =3*$i;
$yscale =3*$i;
$gr -> lb(new Label (.98*$xscale,-.15, $xscale,'black','center','middle'));
$gr -> lb(new Label (-.98*$xscale,-.15, -$xscale,'black','center','middle'));
$gr -> lb(new Label (-.2,$yscale,$yscale,'black','center','middle'));
$gr -> lb(new Label (-.2,-$yscale,-$yscale,'black','center','middle'));
};
$plus = .01;
$minus = -.01;
add_functions( $gr,
"$f for x in [$xmin, $xmax] using color:red and weight:2",
"$f0 for x in [$xmin, $xmax] using color:gray and weight:2"
);
($gr->fn)[0]->steps(200);

$x0 = $h;
$y0 = $f->eval(x=>$x0);
$x0b = $x0+0.2;
$gr->stamps( closed_circle($x0,$y0,'blue') );
$gr -> lb(new Label ($x0b,$y0, "($x0,$y0)",'blue','left','above'));

$x1 = $h+1;
$y1 = $f->eval(x=>$x1);
$x1b = $x1+0.2;
$gr->stamps( closed_circle($x1,$y1,'green') );
$gr -> lb(new Label ($x1b,$y1, "($x1,$y1)",'green','left','above'));

$x2 = $h-1;
$y2 = $f->eval(x=>$x2);
$x2b = $x2-0.4;
$gr->stamps( closed_circle($x2,$y2,'black') );
$gr -> lb(new Label ($x2b,$y2, "($x2,$y2)",'black','right','middle'));



##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_PGML

>>[``G(t) = [$fdisplay]``]<<

a. 
The graph of the function can be obtained from one of the basic graphs by two or more transformations. Describe the transformations.

    There [@ $hPop->menu() @]*.

    There [@ $fPop->menu() @]* a reflection across the [`x`]-axis.

    There [@ $sPop->menu() @]* .

    There [@ $vPop->menu() @]*.
b. 
Sketch the basic graph and the graph of the given function by hand on the same axes. Label the coordinates of three points on the graph of the given function.


END_PGML
Context()->normalStrings;
$showPartialCorrectAnswers = 1;
ANS($hPop->cmp());
ANS($fPop->cmp());
ANS($sPop->cmp());
ANS($vPop->cmp());

##############################################################
#



BEGIN_PGML_SOLUTION


a. 
The scale factor is [`[$factor]`]. Because this [$flip] less than 0, the graph  [$flip] flipped across the [`x`]-axis. 

    There is a translation of [$vertical] units [$vdirection] and a translation of [$horizontal] units [$hdirection].

b. 
[@ image(insertGraph($gr), width=>$xp, height=>$yp, tex_size=>700) @]*




END_PGML_SOLUTION

ENDDOCUMENT();  