##DESCRIPTION
##  Algebra problem:factoring based on z-intercepts
##ENDDESCRIPTION

##KEYWORDS('algebra', 'polynomials', 'factor', 'zero-factor principle')

## DBsubject(Algebra)
## DBchapter(Quadratic Functions)
## DBsection(Factors and x-Intercepts)
## Date('3/22/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('6.1')
## Problem1('37')


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
  "contextLimitedPolynomial.pl",
"contextPolynomialFactors.pl",
"contextLimitedPowers.pl",
"PGgraphmacros.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#Context("LimitedPolynomial");

do {$r0 = random(17,21);
      $r1 = random(-21,-45);
} until ( $r0 != -$r1  and ($r0 % 10) !=0 and ($r1 % 10) !=0);


$a = random(1,9) / (-100);
$b = -($r0 + $r1);
$c = $r0*$r1;

$f = Formula("$a(x**2 + $b x + $c) ")->reduce;

Context("PolynomialFactors-Strict");
Context()->flags->set(singleFactors=>0); LimitedPowers::OnlyIntegers( minPower => 0, maxPower => 1, message => "either 0 or 1", );

$ans = Compute("$a*(x - $r0)(x - $r1)")->reduce;

Context("Numeric");
#  Graph canvas
#
$xmin = -47;
$ymin = -31;
$xmax=47;
$ymax=31;
$gr = init_graph($xmin,$ymin,$xmax,$ymax,axes=>[0,0],grid=>[0,0],size=>[400,300]);
$gr -> lb('reset'); #remove default label and tick marks

#

add_functions( $gr,
               "$f for x in [-50, 50] using color:red and weight:2");
($gr->fn)[0]->steps(200);

$gr->stamps( closed_circle($r0,0,'red') );
$gr->stamps( closed_circle($r1,0,'red') );

$gr -> lb(new Label ( $r0,-4, $r0,'black','center','middle'));
$gr -> lb(new Label ( $r1,-4, $r1,'black','center','middle'));



##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_PGML
  
Graph the function in the *ZInteger* window, and locate the [`x`]-intercepts of the graph. Use the [`x`]-intercepts to write the quadratic expression in factored form.

[: y= [$f]:]    

[`y=`][_________________]{$ans} 



END_PGML
Context()->normalStrings;

##############################################################
#
BEGIN_PGML_SOLUTION
[@image(insertGraph($gr), width=>200, height=>150, tex_size=>700)@]*


We can see that the parabola crosses the [`x`]-axis at [`x = [$r0]`] and [`x = [$r1]`], so the linear factors are [`(x - [$r0])`] and [`(x - [$r1])`].

END_PGML_SOLUTION

ENDDOCUMENT();        