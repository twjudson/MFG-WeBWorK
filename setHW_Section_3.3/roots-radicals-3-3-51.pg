##DESCRIPTION
##  Algebra problem: Roots and Radicals--matching  power functions w/ descriptions
##ENDDESCRIPTION

##KEYWORDS('algebra', 'root', 'radical', 'exponent')

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Roots and Radicals)
## Date('1/31/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('3.3')
## Problem1('51')

########################################################################
DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGgraders.pl",
"unionTables.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());
# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;


##################
#
#  Create a matching list and use popups
#
$ml = new_match_list();
$ml->rf_print_q(~~&pop_up_list_print_q);
$ml->ra_pop_up_list([
"No answer" => "?",
"A" => "A", "B" => "B", "C" => "C", 
"D" => "D", "E" => "E", 
]);

#
#  Add correct questions and answers
#
$ml->qa(
"\(f(x)=x^2\)", "Increasing and concave up",
"\(f(x)=x^{-2}\)", "Decreasing and concave up",
"\(f(x)=x^{1/2}\)", "Increasing and concave down",
);
$ml->choose(3);

#
#  Add extra incorrect answers
#
$ml->extra( "Decreasing and concave down", );
$ml->choose_extra(1);
  
$ml->makeLast("None of the above");
##################

Context()->texStrings;
BEGIN_TEXT
Match each function with the description of its graph in the first quadrant.
\{ ColumnMatchTable($ml, valign=>'TOP') \}
END_TEXT
Context()->normalStrings;

##############################################################
#
$showPartialCorrectAnswers = 0;

#
#  Incremental grader
#
#
#  All or nothing grader
#  
 install_problem_grader(~~&std_problem_grader);

ANS( str_cmp( $ml->ra_correct_ans ) );

@correct = @{$ml->ra_correct_ans()};
$answerstring = join(", ", @correct);
Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:$PAR
The correct answers are $answerstring
END_SOLUTION
Context()->normalStrings;

COMMENT('MathObject version.');


ENDDOCUMENT(); 