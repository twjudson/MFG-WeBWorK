##DESCRIPTION
##  Algebra problem: linear model; emptying oil tank
##ENDDESCRIPTION

##KEYWORDS('algebra', 'linear model', 'line')

## DBsubject(Algebra)
## DBchapter(Functions and their Graphs)
## DBsection(Linear Functions)
## Date('8/10/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('1.1')
## Problem1('3')


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
"niceTables.pl",
"PGgraphmacros.pl",
"PGchoicemacros.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################

Context()->variables->add(w=>"Real", A=>"Real");

@ordinal = ("zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth");  

$A0 = random(250, 300, 10); #was 250;
$rate = 15;
$f = Formula(" $A0 - $rate * w ");

#@h = num_sort( NchooseK(9,4  ));
#$h[4] = 10;

foreach my $i (0..4) {
$h[$i] = 4*$i;
$T[$i] = $f->eval(w=>$h[$i] );
} ;

do {$h1 = random(3,7)} until ($h1 != 5);
$T1 = $f->eval(w=>$h1 );
$week1 = $ordinal[$h1];

do {$h2 = $h1+ random(3,6)} until ( ($h2 % 5) != 0);
$week2 = $ordinal[$h2];
$delta = $h2 - $h1;
$T2 = $f->eval(w=>$h2 );
$dA = ($h2 - $h1)*$rate;

#$A3=175;
#$w3 = ($A0 - $A3)/$rate;
do {$w3 = random(3,9)} until ( ($w3 != $h1) & ($w3 != $h2) & ($w3%4 !=0) );
$A3 = $f->eval(w=>$w3 );

$xmin = -4;
$ymin = -20;
$xmax=20;
$xintercept = $A0/$rate;
$ymax=320;
$xgrid = 12;
$ygrid = 17;

$gr = init_graph($xmin,$ymin,$xmax,$ymax,axes=>[0,0],grid=>[$xgrid,$ygrid],size=>[300,400]);
$gr -> lb('reset'); #remove default label and tick marks

$gr -> lb(new Label (0.95*$xmax, .5,'w','blue','left','bottom'));
$gr -> lb(new Label ( 1.,0.96*$ymax,'A','blue','right','bottom'));

foreach my $i (1..3) {
$xscale =10*$i;
$yscale =100*$i;
$gr -> lb(new Label ( $xscale,-5, $xscale,'black','center','middle'));
$gr -> lb(new Label (-2,$yscale,$yscale,'black','center','middle'));
}

add_functions( $gr,
"$f for w in [0, $xintercept] using color:red and weight:2");
($gr->fn)[0]->steps(200);

$gr->stamps( closed_circle($h1,$T1,'green') );
#$gr -> lb(new Label ($h1-.5,$T1+3,"(b)",'black','center','middle'));
$gr->stamps( closed_circle($h2,$T2,'green') );
#$gr -> lb(new Label ($h2-.5,$T2+3,"(c)",'black','center','middle'));

# a blue line
$gr->moveTo($h1,$T1);
$gr->lineTo($h2,$T1,'blue',1,'dashed');
$gr->lineTo($h2,$T2,'blue',3);
$gr -> lb(new Label ($h2+2,($T1+$T2)/2,"(b)",'black','center','middle'));

# a thicker red arrow from (0,0) to (4,1)
#    (only works for WeBWorK > 2.4;
#    also supports the 'dashed' option)
$gr->moveTo(0,$A3);
$gr->arrowTo($w3,$A3,'blue',2);
$gr->arrowTo($w3,0,'blue',2);
$gr -> lb(new Label ($w3+2,($A3)/2,"(c)",'black','center','middle'));


 
##############################################################
#
#  Text
#
#

Context()->texStrings;
BEGIN_PGML
  
On October 31, Betty and Paul fill their [$A0]-gallon oil tank for their heater. Beginning in November, they use an average of [$rate]  gallons of oil per week. Complete the table of values for the amount of oil, [`A`], left in the tank after [`w`] weeks.


[@
DataTable(
  [
    [ '\(w\)', "\\( $h[0] \\)",  "\\( $h[1] \\)",   "\\( $h[2] \\)", "\\( $h[3] \\)",   "\\( $h[4] \\)"  ]  ,
    [ '\(A\)', ans_rule(2),  ans_rule(2), ans_rule(2),  ans_rule(2),  ans_rule(3)    ]
  ], 
  caption => 'Gallons of oil vs weeks', 
  align => '| c | c | c | c |c | c | ',
  midrules=>1,
 );
@]***

a. 
Write an equation that expresses the amount of oil, [`A`],  in the tank in terms of the number of weeks, [`w`],  since October 31.
    
    [`A=`][__________]  
    
b. 
Graph the equation.  

c. 
How much did the amount of fuel oil in the tank decrease between the [$week1] week and the [$week2] week?  Answer: [___] gallons
    
    lllustrate the answer on your graph. 
    
d. 
When will the tank contain more than [$A3]  gallons of fuel oil? Answer: Until [___] weeks.

    lllustrate the answer on your graph. 
  




END_PGML
Context()->normalStrings;

foreach my $i (0..4) {
ANS(Compute("$T[$i]")->cmp(  ) );
} ;
ANS(Compute("$f")->cmp( ) );
ANS(Compute("$dA")->cmp( ) );
ANS(Compute("$w3")->cmp( ) );


##############################################################
#

BEGIN_PGML_SOLUTION

Evaluate [`[$f]`] for [`w = [$h[0]],[$h[1]],[$h[2]],[$h[3]],[$h[4]] `].  
[@
DataTable(
  [
    [ '\(h\)', "\\( $h[0] \\)",  "\\( $h[1] \\)",   "\\( $h[2] \\)", "\\( $h[3] \\)",   "\\( $h[4] \\)"  ]  ,
    [ '\(T\)',  "\\( $T[0] \\)", "\\( $T[1] \\)",  "\\( $T[2] \\)", "\\( $T[3] \\)",  "\\( $T[4] \\)"  ]
  ], 
  caption => 'Gallons of oil vs weeks', 
  align => '| c | c | c | c |c | c | ',
  midrules=>1,
 );
@]*** 
a. 
[`T =  [$f] `]
b. 
[@ image(insertGraph($gr), width=>210, height=>280, tex_size=>700) @]*
b. 
We could compute the amount of oil left at the [$week1] week and the [$week2] week and find the week and find the difference, or we can notice that in [$delta] weeks the oil will decrease by [` [$delta]\cdot [$rate]= [$dA] `] gallons.  
c. 
Solve [`[$f] = [$A3]`] to determine the number of weeks to pass before there are [$A3] gallons of oil, namely  [`w=[$w3]`].   Because amount of oil is diminishing, there had been more oil until that time and less oil afterwards.  



END_PGML_SOLUTION

ENDDOCUMENT();        