##DESCRIPTION
##  Algebra problem: Rational exponents--solving equations (approximately)
##ENDDESCRIPTION

##KEYWORDS('algebra', 'root', 'radical', 'exponent')

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Roots and Radicals)
## Date('2/5/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('3.4')
## Problem1('47')

########################################################################
DOCUMENT(); 

loadMacros(
      "PGstandard.pl", # Standard macros for PG language
      "MathObjects.pl",
      "contextLimitedPowers.pl",
      "PGchoicemacros.pl",
"PGML.pl",
#"parserRoot.pl",
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());
# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;



###########################
Context("Numeric");
#
#

@variables = ("x", "t", "r", "w");
Context()->variables->add(t=>"Real",r=>"Real", w=>'Real');
@denominators = (2, 3, 4, 5, 6);

Context()->flags->set(reduceConstants=>0);
Context()->flags->set(limits=>[1,2]);

$i = random(0, $#variables-1); 
$x = $variables[$i];
$j = random(0, $denominators-1); 
$n = $denominators[$j]; 
do {$m = random(2, 5);} until (gcd($m, $n) == 1);

$a = random(2,5);
$b = $a**$m;
$c = $a**$n;

$answer= Compute("1/$b");
$given= "$x^{-$n/$m} ";


Context()->{format}{number} = "%.3f";
Context()->operators->undefine("^","**", "*");
Context()->functions->disable("All");


##############################################################
#


BEGIN_PGML
Solve. Round your answers to the nearest thousandth if necessary. Assume that all variables represent positive numbers.
  
[`[$given ] = [$c] `]  
[` [$x] = `][_______]{ $answer->cmp(tolType => 'absolute',   tolerance => .0005) }  

END_PGML

##############################################################

BEGIN_PGML_SOLUTION
Raise both sides to the exponent [` [$m] / [$n] `], then take reciprocals.
END_PGML_SOLUTION

ENDDOCUMENT();     