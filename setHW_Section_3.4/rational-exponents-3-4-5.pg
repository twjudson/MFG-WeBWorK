##DESCRIPTION
##  Algebra problem: Rational exponents--converting rational exponents into radical form
##ENDDESCRIPTION

##KEYWORDS('algebra', 'root', 'radical', 'exponent')

## DBsubject(Algebra)
## DBchapter(Functions)
## DBsection(Roots and Radicals)
## Date('2/1/2018')
## Author('Yoshiwara')
## Institution('')
## TitleText1('Modeling, Functions, and Graphs')
## EditionText1('5')
## AuthorText1('Yoshiwara')
## Section1('3.4')
## Problem1('5')

########################################################################
DOCUMENT(); 

loadMacros(
"PGstandard.pl",
"MathObjects.pl",
"PGchoicemacros.pl",
"PGML.pl",
"parserRoot.pl",
"contextLimitedPowers.pl",
);

Context("Numeric");

@denominators = (2, 3, 4, 5, 6);
@ordinals          = ("square", "cubic", "fourth", "fifth", "sixth");
@fractions         = ("1/2", "1/3", "1/4", "1/5", "1/6");
#$j = random(0,$#denominators-1);
#$n = $denominators[$j];
#$m = $fractions[$j];
#$word = $ordinals[$j];

@variables = ("x","y", "a","b", "p","q", "m","n");
Context()->variables->add(y=>'Real', a=>'Real', b=>'Real', p=>'Real', q=>'Real', m=>'Real' , n=>'Real' );
Context()->flags->set(reduceConstants=>0);
Context()->flags->set(limits=>[1,2]);
parser::Root->Enable;

$i = random(0,$#variables-1);
$x[0]  = $variables[$i];
$base[0] = "$x[0]";
$j= random(1,$#denominators-1); 
$n[0] = $denominators[$j];

$i = random(0,$#variables-1);
$x[1] = $variables[$i];
$base[1] = "$x[1]";
$j= random(0,$#denominators-1); 
$n[1] = $denominators[$j];

$i = random(0,$#variables /2 - 1);
$x[2] = $variables[2*$i];
$y = $variables[2*$i+1];
$base[2] = "($x[2] $y)";
$j= random(0,$#denominators-1); 
$n[2] = $denominators[$j];

  $m[0] = $n[0] -1;
  $given[0] = "  $base[0] ^($m[0]/$n[0]) ";
  $answer[0] = "root($n[0], ($base[0])**($m[0]) )" ;

foreach my $i ( 1..2 ) { 
  $m[$i] = $n[$i] -1;
  $given[$i] = " $base[$i] ^(-$m[$i]/$n[$i])";
  $answer[$i] = "1/root($n[$i], ($base[$i])**($m[$i]) )" ;
  if($n[$i] == 2) {$answer[$i] = "1/sqrt( ($base[$i]) )" ;};

}

#Context()->functions->disable("All");
LimitedPowers::OnlyPositiveIntegers();

##################
BEGIN_PGML

Write each expression in radical form. Assume that all variables represent positive numbers.  
a. 
[: [$given[0] ] = :][_______________]{ $answer[0] }  Enter "root(n,x)" for [` \sqrt[n]{x} `].  
b. 
[: [$given[1] ] = :][_______________]{ $answer[1] }  Enter "root(n,x)" for [` \sqrt[n]{x} `].  
c. 
[: [$given[2] ] = :][_______________]{ $answer[2] }  Enter "root(n,x)" for [` \sqrt[n]{x} `].  


END_PGML 

########################
Context()->texStrings;
BEGIN_SOLUTION
${PAR}SOLUTION:${PAR}

An nth root corresponds to an exponent of \(1/n\), and an nth root that occurs as (a factor of) the denominator corresponds to an exponent of \(-1/n\).

END_SOLUTION

ENDDOCUMENT();     